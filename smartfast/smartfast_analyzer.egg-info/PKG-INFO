Metadata-Version: 1.2
Name: smartfast-analyzer
Version: 0.0.4
Summary: Smartfast is a Solidity static analysis framework written in Python 3.
Home-page: https://github.com/smartfast
Author: Smart Analysis
License: AGPL-3.0
Description: # Smartfast, the Solidity source analyzer
        <img src="./logo.png" alt="Logo" width="500"/>
        
        [![Build Status](https://img.shields.io/github/workflow/status/crytic/smartfast/CI/master)](https://github.com/SmartContractTools/SmartFast/actions?query=workflow%3ACI)
        [![Slack Status](https://empireslacking.herokuapp.com/badge.svg)](https://empireslacking.herokuapp.com)
        [![PyPI version](https://badge.fury.io/py/smartfast-analyzer.svg)](https://badge.fury.io/py/smartfast-analyzer)
        
        Smartfast is a Solidity static analysis framework written in Python 3. It runs a suite of vulnerability detectors, prints visual information about contract details, and provides an API to easily write custom analyses. Smartfast enables developers to find vulnerabilities, enhance their code comprehension, and quickly prototype custom analyses.
        
        - [Features](#features)
        - [Bugs and Optimizations Detection](#bugs-and-optimizations-detection)
        - [Printers](#printers)
        - [Tools](#tools)
        - [How to Install](#how-to-install)
        - [Getting Help](#getting-help)
        - [Publications](#publications)
        
        ## Features
        
        * Detects vulnerable Solidity code with low false positives
        * Identifies where the error condition occurs in the source code
        * Easily integrates into continuous integration and Truffle builds
        * Built-in 'printers' quickly report crucial contract information
        * Detector API to write custom analyses in Python
        * Ability to analyze contracts written with Solidity >= 0.4
        * Intermediate representation ([SmartIR](https://github.com/trailofbits/smartfast/wiki/SmartIR)) enables simple, high-precision analyses
        * Correctly parses 99.9% of all public Solidity code
        * Average execution time of less than 1 second per contract
        
        
        ## Bugs and Optimizations Detection
        
        Run Smartfast on a Truffle/Embark/Dapp/Etherlime application:
        ```bash
        smartfast .
        ```
        
        Run Smartfast on a single file:
        ```bash
        smartfast tests/uninitialized.sol
        ```
        
        For additional configuration, see the [usage](https://github.com/trailofbits/smartfast/wiki/Usage) documentation.
        
        Use [solc-select](https://github.com/crytic/solc-select) if your contracts require older versions of solc.
        
        ### Detectors
        
        
        Num | Detector | What it Detects | Impact | Confidence
        --- | --- | --- | --- | ---
        1 | `abiencoderv2-array` | [Storage abiencoderv2 array](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#storage-abiencoderv2-array) | High | High
        2 | `array-by-reference` | [Modifying storage array by value](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#modifying-storage-array-by-value) | High | High
        3 | `incorrect-shift` | [The order of parameters in a shift instruction is incorrect.](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#shift-parameter-mixup) | High | High
        4 | `multiple-constructors` | [Multiple constructor schemes](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#multiple-constructor-schemes) | High | High
        5 | `name-reused` | [Contract's name reused](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#name-reused) | High | High
        6 | `public-mappings-nested` | [Public mappings with nested variables](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#public-mappings-with-nested-variables) | High | High
        7 | `rtlo` | [Right-To-Left-Override control character is used](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#right-to-left-override-character) | High | High
        8 | `shadowing-state` | [State variables shadowing](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#state-variable-shadowing) | High | High
        9 | `suicidal` | [Functions allowing anyone to destruct the contract](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#suicidal) | High | High
        10 | `uninitialized-state` | [Uninitialized state variables](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#uninitialized-state-variables) | High | High
        11 | `uninitialized-storage` | [Uninitialized storage variables](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#uninitialized-storage-variables) | High | High
        12 | `unprotected-upgrade` | [Unprotected upgradeable contract](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#unprotected-upgradeable-contract) | High | High
        13 | `arbitrary-send` | [Functions that send Ether to arbitrary destinations](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations) | High | Medium
        14 | `controlled-array-length` | [Tainted array length assignment](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#array-length-assignment) | High | Medium
        15 | `controlled-delegatecall` | [Controlled delegatecall destination](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#controlled-delegatecall) | High | Medium
        16 | `reentrancy-eth` | [Reentrancy vulnerabilities (theft of ethers)](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#reentrancy-vulnerabilities) | High | Medium
        17 | `storage-array` | [Signed storage integer array compiler bug](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#storage-signed-integer-array) | High | Medium
        18 | `weak-prng` | [Weak PRNG](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#weak-PRNG) | High | Medium
        19 | `enum-conversion` | [Detect dangerous enum conversion](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#dangerous-enum-conversion) | Medium | High
        20 | `erc20-interface` | [Incorrect ERC20 interfaces](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#incorrect-erc20-interface) | Medium | High
        21 | `erc721-interface` | [Incorrect ERC721 interfaces](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#incorrect-erc721-interface) | Medium | High
        22 | `incorrect-equality` | [Dangerous strict equalities](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#dangerous-strict-equalities) | Medium | High
        23 | `locked-ether` | [Contracts that lock ether](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#contracts-that-lock-ether) | Medium | High
        24 | `mapping-deletion` | [Deletion on mapping containing a structure](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#deletion-on-mapping-containing-a-structure) | Medium | High
        25 | `shadowing-abstract` | [State variables shadowing from abstract contracts](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#state-variable-shadowing-from-abstract-contracts) | Medium | High
        26 | `tautology` | [Tautology or contradiction](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#tautology-or-contradiction) | Medium | High
        27 | `boolean-cst` | [Misuse of Boolean constant](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#misuse-of-a-boolean-constant) | Medium | Medium
        28 | `constant-function-asm` | [Constant functions using assembly code](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#constant-functions-using-assembly-code) | Medium | Medium
        29 | `constant-function-state` | [Constant functions changing the state](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#constant-functions-changing-the-state) | Medium | Medium
        30 | `divide-before-multiply` | [Imprecise arithmetic operations order](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#divide-before-multiply) | Medium | Medium
        31 | `reentrancy-no-eth` | [Reentrancy vulnerabilities (no theft of ethers)](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#reentrancy-vulnerabilities-1) | Medium | Medium
        32 | `reused-constructor` | [Reused base constructor](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#reused-base-constructors) | Medium | Medium
        33 | `tx-origin` | [Dangerous usage of `tx.origin`](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#dangerous-usage-of-txorigin) | Medium | Medium
        34 | `unchecked-lowlevel` | [Unchecked low-level calls](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#unchecked-low-level-calls) | Medium | Medium
        35 | `unchecked-send` | [Unchecked send](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#unchecked-send) | Medium | Medium
        36 | `uninitialized-local` | [Uninitialized local variables](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#uninitialized-local-variables) | Medium | Medium
        37 | `unused-return` | [Unused return values](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#unused-return) | Medium | Medium
        38 | `incorrect-modifier` | [Modifiers that can return the default value](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#incorrect-modifier) | Low | High
        39 | `shadowing-builtin` | [Built-in symbol shadowing](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#builtin-symbol-shadowing) | Low | High
        40 | `shadowing-local` | [Local variables shadowing](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#local-variable-shadowing) | Low | High
        41 | `uninitialized-fptr-cst` | [Uninitialized function pointer calls in constructors](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#uninitialized-function-pointers-in-constructors) | Low | High
        42 | `variable-scope` | [Local variables used prior their declaration](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables) | Low | High
        43 | `void-cst` | [Constructor called not implemented](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#void-constructor) | Low | High
        44 | `calls-loop` | [Multiple calls in a loop](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation/#calls-inside-a-loop) | Low | Medium
        45 | `events-access` | [Missing Events Access Control](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#missing-events-access-control) | Low | Medium
        46 | `events-maths` | [Missing Events Arithmetic](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#missing-events-arithmetic) | Low | Medium
        47 | `incorrect-unary` | [Dangerous unary expressions](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#dangerous-unary-expressions) | Low | Medium
        48 | `missing-zero-check` | [Missing Zero Address Validation](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#missing-zero-address-validation) | Low | Medium
        49 | `reentrancy-benign` | [Benign reentrancy vulnerabilities](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#reentrancy-vulnerabilities-2) | Low | Medium
        50 | `reentrancy-events` | [Reentrancy vulnerabilities leading to out-of-order Events](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#reentrancy-vulnerabilities-3) | Low | Medium
        51 | `timestamp` | [Dangerous usage of `block.timestamp`](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#block-timestamp) | Low | Medium
        52 | `assembly` | [Assembly usage](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#assembly-usage) | Informational | High
        53 | `boolean-equal` | [Comparison to boolean constant](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#boolean-equality) | Informational | High
        54 | `deprecated-standards` | [Deprecated Solidity Standards](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#deprecated-standards) | Informational | High
        55 | `erc20-indexed` | [Un-indexed ERC20 event parameters](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#unindexed-erc20-event-parameters) | Informational | High
        56 | `function-init-state` | [Function initializing state variables](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#function-initializing-state-variables) | Informational | High
        57 | `low-level-calls` | [Low level calls](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#low-level-calls) | Informational | High
        58 | `missing-inheritance` | [Missing inheritance](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#missing-inheritance) | Informational | High
        59 | `naming-convention` | [Conformity to Solidity naming conventions](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions) | Informational | High
        60 | `pragma` | [If different pragma directives are used](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#different-pragma-directives-are-used) | Informational | High
        61 | `redundant-statements` | [Redundant statements](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#redundant-statements) | Informational | High
        62 | `solc-version` | [Incorrect Solidity version](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#incorrect-versions-of-solidity) | Informational | High
        63 | `unimplemented-functions` | [Unimplemented functions](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#unimplemented-functions) | Informational | High
        64 | `unused-state` | [Unused state variables](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#unused-state-variables) | Informational | High
        65 | `assert-state-change` | [Assert state change](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#assert-state-change) | Informational | High
        66 | `costly-loop` | [Costly operations in a loop](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#costly-operations-inside-a-loop) | Informational | Medium
        67 | `reentrancy-unlimited-gas` | [Reentrancy vulnerabilities through send and transfer](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#reentrancy-vulnerabilities-4) | Informational | Medium
        68 | `similar-names` | [Variable names are too similar](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#variable-names-are-too-similar) | Informational | Medium
        69 | `too-many-digits` | [Conformance to numeric notation best practices](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#too-many-digits) | Informational | Medium
        70 | `constable-states` | [State variables that could be declared constant](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant) | Optimization | High
        71 | `external-function` | [Public function that could be declared external](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation#public-function-that-could-be-declared-external) | Optimization | High
        
        
        See the [Detectors Documentation](https://github.com/SmartContractTools/SmartFast/wiki/Detector-Documentation) for more information.
        By default, all the detectors are run.
        
        Check out [Crytic](https://crytic.io/) to get access to additional Smartfast's detectors and GitHub integration.
        
        ## Printers
        
        ### Quick Review Printers
        - `human-summary`: [Print a human-readable summary of the contracts](https://github.com/trailofbits/smartfast/wiki/Printer-documentation#human-summary)
        - `inheritance-graph`: [Export the inheritance graph of each contract to a dot file](https://github.com/trailofbits/smartfast/wiki/Printer-documentation#inheritance-graph)
        - `contract-summary`: [Print a summary of the contracts](https://github.com/trailofbits/smartfast/wiki/Printer-documentation#contract-summary)
        
        ### In-Depth Review Printers
        - `call-graph`: [Export the call-graph of the contracts to a dot file](https://github.com/trailofbits/smartfast/wiki/Printer-documentation#call-graph)
        - `cfg`: [Export the CFG of each functions](https://github.com/trailofbits/smartfast/wiki/Printer-documentation#cfg)
        - `function-summary`: [Print a summary of the functions](https://github.com/trailofbits/smartfast/wiki/Printer-documentation#function-summary)
        - `vars-and-auth`: [Print the state variables written and the authorization of the functions](https://github.com/SmartContractTools/SmartFast/wiki/Printer-documentation#variables-written-and-authorization)
        
        To run a printer, use `--print` and a comma-separated list of printers.
        
        See the [Printer documentation](https://github.com/SmartContractTools/SmartFast/wiki/Printer-documentation) for the complete lists.
        
        ## Tools
        
        - `smartfast-check-upgradeability`: [Review `delegatecall`-based upgradeability](https://github.com/SmartContractTools/SmartFast/wiki/Upgradeability-Checks)
        - `smartfast-prop`: [Automatic unit test and property generation](https://github.com/SmartContractTools/SmartFast/wiki/Property-generation)
        - `smartfast-flat`: [Flatten a codebase](https://github.com/SmartContractTools/SmartFast/wiki/Contract-Flattening)
        - `smartfast-check-erc`: [Check the ERC's conformance](https://github.com/SmartContractTools/SmartFast/wiki/ERC-Conformance)
        - `smartfast-format`: [Automatic patches generation](https://github.com/SmartContractTools/SmartFast/wiki/Smartfast-format)
        
        See the [Tool documentation](https://github.com/SmartContractTools/SmartFast/wiki/Tool-Documentation) for additional tools.
        
        [Contact us](https://www.trailofbits.com/contact/) to get help on building custom tools.
        
        ## How to install
        
        Smartfast requires Python 3.6+ and [solc](https://github.com/ethereum/solidity/), the Solidity compiler.
        
        ### Using Pip
        
        ```bash
        pip3 install smartfast-analyzer
        ```
        
        ### Using Git
        
        ```bash
        git clone https://github.com/SmartContractTools/SmartFast.git && cd smartfast
        python3 setup.py install
        ```
        
        We recommend using an Python virtual environment, as detailed in the [Developer Installation Instructions](https://github.com/trailofbits/smartfast/wiki/Developer-installation), if you prefer to install Smartfast via git.
        
        ### Using Docker
        
        Use the [`eth-security-toolbox`](https://github.com/trailofbits/eth-security-toolbox/) docker image. It includes all of our security tools and every major version of Solidity in a single image. `/home/share` will be mounted to `/share`  in the container.
        
        ```bash
        docker pull trailofbits/eth-security-toolbox
        ```
        
        To share a directory in the container:
        
        ```bash
        docker run -it -v /home/share:/share trailofbits/eth-security-toolbox
        ```
        
        ## Getting Help
        
        Feel free to stop by our [Slack channel](https://empireslacking.herokuapp.com) (#ethereum) for help using or extending Smartfast.
        
        * The [Printer documentation](https://github.com/trailofbits/smartfast/wiki/Printer-documentation) describes the information Smartfast is capable of visualizing for each contract.
        
        * The [Detector documentation](https://github.com/trailofbits/smartfast/wiki/Adding-a-new-detector) describes how to write a new vulnerability analyses.
        
        * The [API documentation](https://github.com/trailofbits/smartfast/wiki/API-examples) describes the methods and objects available for custom analyses.
        
        * The [SmartIR documentation](https://github.com/trailofbits/smartfast/wiki/SmartIR) describes the SmartIR intermediate representation.
        
        ## License
        
        Smartfast is licensed and distributed under the AGPLv3 license. [Contact us](mailto:opensource@trailofbits.com) if you're looking for an exception to the terms.
        
        
        ## Publications
        
        ### Trail of Bits publication
        - [Smartfast: A Static Analysis Framework For Smart Contracts](https://arxiv.org/abs/1908.09878), Josselin Feist, Gustavo Grieco, Alex Groce - WETSEB '19
        
        ### External publications
        - [ReJection: A AST-Based Reentrancy Vulnerability Detection Method](https://www.researchgate.net/publication/339354823_ReJection_A_AST-Based_Reentrancy_Vulnerability_Detection_Method), Rui Ma, Zefeng Jian, Guangyuan Chen, Ke Ma, Yujia Chen - CTCIS 19
        - [MPro: Combining Static and Symbolic Analysis forScalable Testing of Smart Contract](https://arxiv.org/pdf/1911.00570.pdf), William Zhang, Sebastian Banescu, Leodardo Pasos, Steven Stewart, Vijay Ganesh - ISSRE 2019
        - [ETHPLOIT: From Fuzzing to Efficient Exploit Generation against Smart Contracts](https://wcventure.github.io/FuzzingPaper/Paper/SANER20_ETHPLOIT.pdf), Qingzhao Zhang, Yizhuo Wang, Juanru Li, Siqi Ma - SANER 20
        - [Verification of Ethereum Smart Contracts: A Model Checking Approach](http://www.ijmlc.org/vol10/977-AM0059.pdf), Tam Bang, Hoang H Nguyen, Dung Nguyen, Toan Trieu, Tho Quan - IJMLC 20
        - [Smart Contract Repair](https://arxiv.org/pdf/1912.05823.pdf), Xiao Liang Yu, Omar Al-Bataineh, David Lo, Abhik Roychoudhury - TOSEM 20
        
        If you are using Smartfast on an academic work, consider applying to the [Crytic $10k Research Prize](https://blog.trailofbits.com/2019/11/13/announcing-the-crytic-10k-research-prize/).
        
Platform: UNKNOWN
Requires-Python: >=3.6
